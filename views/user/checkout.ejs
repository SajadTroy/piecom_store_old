<link rel="stylesheet" href="/cdn/css/product.css">
<link rel="stylesheet" href="/cdn/css/cart.css">

<div class="products-container">
    <div class="page-header">
        <h1>Checkout</h1>
    </div>

    <div class="checkout-grid">
        <div class="delivery-address">
            <div class="info-card">
                <h3>Delivery Address</h3>
                <form id="addressForm" class="address-form">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="addressLine1">Address Line 1</label>
                            <input type="text" id="addressLine1" name="addressLine1" value="<%= user.shippingAddress?.addressLine1 || '' %>" required>
                        </div>
                        <div class="form-group">
                            <label for="addressLine2">Address Line 2</label>
                            <input type="text" id="addressLine2" name="addressLine2" value="<%= user.shippingAddress?.addressLine2 || '' %>">
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="landmark">Landmark</label>
                            <input type="text" id="landmark" name="landmark" value="<%= user.shippingAddress?.landmark || '' %>">
                        </div>
                        <div class="form-group">
                            <label for="street">Street</label>
                            <input type="text" id="street" name="street" value="<%= user.shippingAddress?.street || '' %>" required>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="city">City</label>
                            <input type="text" id="city" name="city" value="<%= user.shippingAddress?.city || '' %>" required>
                        </div>
                        <div class="form-group">
                            <label for="state">State</label>
                            <select id="state" name="state" required>
                                <option value="">Select State</option>
                                <% const states = ['Andaman and Nicobar Islands', 'Andhra Pradesh', 'Arunachal Pradesh', 
                                'Assam', 'Bihar', 'Chandigarh', 'Chhattisgarh', 'Dadra and Nagar Haveli and Daman and Diu', 
                                'Delhi', 'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu and Kashmir', 'Jharkhand', 
                                'Karnataka', 'Kerala', 'Ladakh', 'Lakshadweep', 'Madhya Pradesh', 'Maharashtra', 'Manipur', 
                                'Meghalaya', 'Mizoram', 'Nagaland', 'Odisha', 'Puducherry', 'Punjab', 'Rajasthan', 'Sikkim', 
                                'Tamil Nadu', 'Telangana', 'Tripura', 'Uttar Pradesh', 'Uttarakhand', 'West Bengal'] %>
                                <% states.forEach(state => { %>
                                    <option value="<%= state %>" <%= user.shippingAddress?.state === state ? 'selected' : '' %>><%= state %></option>
                                <% }) %>
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="zip">PIN Code</label>
                            <input type="text" id="zip" name="zip" pattern="[0-9]{6}" value="<%= user.shippingAddress?.zip || '' %>" required>
                        </div>
                        <div class="form-group">
                            <label for="country">Country</label>
                            <input type="text" id="country" name="country" value="India" readonly>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="cart-summary sticky">
            <div class="info-card">
                <h3>Order Summary</h3>
                <% if (cart.products.length > 0) { %>
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span>₹<%= cart.totalPrice %></span>
                    </div>
                    <div class="summary-row">
                        <span>Delivery Charges</span>
                        <span>₹60</span>
                    </div>
                    <div class="summary-row">
                        <span>Payment Gateway Fee (2%)</span>
                        <span class="payment-fee">₹0</span>
                    </div>
                    <div class="summary-row total">
                        <span>Total Amount</span>
                        <span class="total-amount">₹<%= cart.totalPrice + 60 %></span>
                    </div>
                    <button class="button button-primary checkout-btn" id="placeOrder">Place Order</button>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.getElementById('placeOrder').addEventListener('click', async function() {
    const form = document.getElementById('addressForm');
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }

    const address = {
        addressLine1: document.getElementById('addressLine1').value,
        addressLine2: document.getElementById('addressLine2').value,
        landmark: document.getElementById('landmark').value,
        street: document.getElementById('street').value,
        city: document.getElementById('city').value,
        state: document.getElementById('state').value,
        zip: document.getElementById('zip').value,
        country: document.getElementById('country').value
    };

    try {
        // Create order
        const orderResponse = await fetch('/create-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ address })
        });
        
        if (!orderResponse.ok) throw new Error('Order creation failed');
        
        const { order, amount, paymentFee } = await orderResponse.json();
        
        // Update display with payment fee
        document.querySelector('.payment-fee').textContent = `₹${paymentFee}`;
        document.querySelector('.total-amount').textContent = `₹${amount}`;

        // Initialize Razorpay
        const options = {
            key: '<%= process.env.RAZORPAY_KEY_ID %>',
            amount: order.amount,
            currency: order.currency,
            name: 'Piecom',
            description: 'Purchase from Piecom',
            order_id: order.id,
            handler: async function(response) {
                try {
                    const verifyResponse = await fetch('/verify-payment', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_signature: response.razorpay_signature
                        })
                    });

                    if (verifyResponse.ok) {
                        window.location.href = '/orders'; // Redirect to orders page
                    } else {
                        alert('Payment verification failed');
                    }
                } catch (error) {
                    console.error('Payment verification error:', error);
                    alert('Payment verification failed');
                }
            },
            prefill: {
                email: '<%= user.email %>',
                contact: '<%= user.phone %>'
            },
            theme: {
                color: '#333'
            }
        };

        const rzp = new Razorpay(options);
        rzp.open();
    } catch (error) {
        console.error('Checkout error:', error);
        alert('Error processing checkout');
    }
});
</script>
